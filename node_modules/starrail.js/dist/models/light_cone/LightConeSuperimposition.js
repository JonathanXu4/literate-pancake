"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const config_file_js_1 = require("config_file.js");
const AssetsNotFoundError_1 = __importDefault(require("../../errors/AssetsNotFoundError"));
const TextAssets_1 = __importDefault(require("../assets/TextAssets"));
const StatProperty_1 = __importStar(require("../StatProperty"));
const DynamicTextAssets_1 = __importDefault(require("../assets/DynamicTextAssets"));
/**
 * @en LightConeSuperimposition
 */
class LightConeSuperimposition {
    /**
     * @param id
     * @param client
     */
    constructor(id, level, client) {
        var _a;
        this.id = id;
        this.level = level;
        this.client = client;
        const _data = (_a = client.cachedAssetsManager.getStarRailCacheData("EquipmentSkillConfig")[this.id]) === null || _a === void 0 ? void 0 : _a[this.level];
        if (!_data)
            throw new AssetsNotFoundError_1.default("LightConeSuperimposition", this.id);
        this._data = _data;
        const json = new config_file_js_1.JsonReader(this._data);
        this.paramList = json.get("ParamList").mapArray((_, v) => v.getAsNumber("Value"));
        this.name = new TextAssets_1.default(json.getAsNumber("SkillName", "Hash"), this.client);
        this.description = new DynamicTextAssets_1.default(json.getAsNumber("SkillDesc", "Hash"), { paramList: this.paramList }, this.client);
        this.stats = json.get("AbilityProperty").mapArray((_, prop) => {
            if (prop.getAsString("PropertyType") === "AllDamageTypeAddedRatio") {
                return StatProperty_1.default.ALL_DAMAGE_TYPES.map(damageType => new StatProperty_1.StatPropertyValue(damageType, prop.getAsNumber("Value", "Value"), this.client));
            }
            return [new StatProperty_1.StatPropertyValue(prop.getAsString("PropertyType"), prop.getAsNumber("Value", "Value"), this.client)];
        }).flat();
    }
}
exports.default = LightConeSuperimposition;
