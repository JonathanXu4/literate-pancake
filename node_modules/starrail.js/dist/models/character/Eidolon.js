"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const config_file_js_1 = require("config_file.js");
const AssetsNotFoundError_1 = __importDefault(require("../../errors/AssetsNotFoundError"));
const ImageAssets_1 = __importDefault(require("../assets/ImageAssets"));
const TextAssets_1 = __importDefault(require("../assets/TextAssets"));
const hash_utils_1 = require("../../utils/hash_utils");
const Skill_1 = __importDefault(require("./skill/Skill"));
/**
 * @en Eidolon
 */
class Eidolon {
    /**
     * @param id
     * @param client
     */
    constructor(id, client) {
        this.id = id;
        this.client = client;
        const _data = this.client.cachedAssetsManager.getStarRailCacheData("AvatarRankConfig")[id];
        if (!_data)
            throw new AssetsNotFoundError_1.default("Eidolon", this.id);
        this._data = _data;
        const json = new config_file_js_1.JsonReader(this._data);
        this.rank = json.getAsNumber("Rank");
        this.icon = new ImageAssets_1.default(json.getAsString("IconPath"), this.client);
        // TODO: better way to get characterId
        const characterId = Math.floor(this.id / 100);
        this.picture = new ImageAssets_1.default(`UI/UI3D/Rank/_dependencies/Textures/${characterId}/${characterId}_Rank_${this.rank}.png`, this.client);
        this.name = new TextAssets_1.default((0, hash_utils_1.getStableHash)(json.getAsString("Name")), this.client);
        // TODO: replace placeholders with numbers in Param
        this.description = new TextAssets_1.default((0, hash_utils_1.getStableHash)(json.getAsString("Desc")), this.client);
        this.skillsLevelUp = Object.fromEntries(json.get("SkillAddLevelList").mapObject((skillId, levelAdd) => [skillId, { skill: new Skill_1.default(Number(skillId), this.client), levelUp: levelAdd.getAsNumber() }]));
    }
}
exports.default = Eidolon;
