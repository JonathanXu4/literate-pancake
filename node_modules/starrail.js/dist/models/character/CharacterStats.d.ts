import { OtherStatPropertyType, StatPropertyType, StatPropertyValue } from "../StatProperty";
import Character from "./Character";
import StarRail from "../../client/StarRail";
import { CombatTypeId } from "../CombatType";
/**
 * @en CharacterStats
 */
declare class CharacterStats {
    /**  */
    readonly relicsStats: StatList;
    /**  */
    readonly relicSetsStats: StatList;
    /**  */
    readonly lightConeStats: StatList;
    /**  */
    readonly characterStats: StatList;
    /**  */
    readonly skillTreeNodesStats: StatList;
    /**  */
    readonly overallStats: OverallStatList;
    /**
     * @param character
     */
    constructor(character: Character);
}
export default CharacterStats;
/**
 * @en StatList
 */
export declare class StatList {
    /**  */
    readonly list: {
        [key: string]: StatPropertyValue;
    };
    /**  */
    readonly combatTypeId: CombatTypeId;
    /**  */
    readonly client: StarRail;
    /**
     * @param stats
     * @param client
     */
    constructor(list: {
        [key: string]: StatPropertyValue;
    }, combatTypeId: CombatTypeId, client: StarRail);
    /**  */
    get critRate(): StatPropertyValue;
    /**  */
    get critDamage(): StatPropertyValue;
    /**  */
    get breakEffect(): StatPropertyValue;
    /**  */
    get outgoingHealingBoost(): StatPropertyValue;
    /**  */
    get maxEnergy(): StatPropertyValue;
    /**  */
    get energyRegenRate(): StatPropertyValue;
    /**  */
    get effectHitRate(): StatPropertyValue;
    /**  */
    get effectResistance(): StatPropertyValue;
    /**  */
    get physicalDamageBonus(): StatPropertyValue;
    /**  */
    get fireDamageBonus(): StatPropertyValue;
    /**  */
    get iceDamageBonus(): StatPropertyValue;
    /**  */
    get lightningDamageBonus(): StatPropertyValue;
    /**  */
    get windDamageBonus(): StatPropertyValue;
    /**  */
    get quantumDamageBonus(): StatPropertyValue;
    /**  */
    get imaginaryDamageBonus(): StatPropertyValue;
    /**  */
    get physicalResistanceBoost(): StatPropertyValue;
    /**  */
    get fireResistanceBoost(): StatPropertyValue;
    /**  */
    get iceResistanceBoost(): StatPropertyValue;
    /**  */
    get lightningResistanceBoost(): StatPropertyValue;
    /**  */
    get windResistanceBoost(): StatPropertyValue;
    /**  */
    get quantumResistanceBoost(): StatPropertyValue;
    /**  */
    get imaginaryResistanceBoost(): StatPropertyValue;
    /**
     * @param type
     * @returns
     */
    getByType(type: StatPropertyType | OtherStatPropertyType): StatPropertyValue;
    /**
     * @returns
     */
    getAll(): StatPropertyValue[];
    /**
     * @returns
     */
    getMatchedDamageBonus(): StatPropertyValue;
}
/**
 * @en OverallStatList
 * @extends {StatList}
 */
export declare class OverallStatList extends StatList {
    /**
     * @param list
     * @param client
     */
    constructor(list: {
        [key: string]: StatPropertyValue;
    }, combatTypeId: CombatTypeId, client: StarRail);
    /**  */
    get maxHP(): StatPropertyValue;
    /**  */
    get defense(): StatPropertyValue;
    /**  */
    get attack(): StatPropertyValue;
    /**  */
    get speed(): StatPropertyValue;
}
/**
 * @param stats
 * @param client
 * @returns
 */
export declare function sumStats(stats: StatPropertyValue[], client: StarRail): {
    [key: string]: StatPropertyValue;
};
