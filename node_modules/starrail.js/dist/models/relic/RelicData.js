"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const config_file_js_1 = require("config_file.js");
const AssetsNotFoundError_1 = __importDefault(require("../../errors/AssetsNotFoundError"));
const RelicExpType_1 = __importDefault(require("./RelicExpType"));
const RelicMainStatGroup_1 = __importDefault(require("./RelicMainStatGroup"));
const RelicSubStatGroup_1 = __importDefault(require("./RelicSubStatGroup"));
const RelicSet_1 = __importDefault(require("./RelicSet"));
const TextAssets_1 = __importDefault(require("../assets/TextAssets"));
const ImageAssets_1 = __importDefault(require("../assets/ImageAssets"));
const RelicType_1 = __importDefault(require("./RelicType"));
/**
 * @en RelicData
 */
class RelicData {
    /**
     * @param id
     * @param client
     */
    constructor(id, client) {
        this.id = id;
        this.client = client;
        const _data = client.cachedAssetsManager.getStarRailCacheData("RelicConfig")[this.id];
        if (!_data)
            throw new AssetsNotFoundError_1.default("Relic", this.id);
        this._data = _data;
        const _itemData = client.cachedAssetsManager.getStarRailCacheData("ItemConfigRelic")[this.id];
        if (!_itemData)
            throw new AssetsNotFoundError_1.default("Relic Item", this.id);
        this._itemData = _itemData;
        const json = new config_file_js_1.JsonReader(this._data);
        const itemJson = new config_file_js_1.JsonReader(this._itemData);
        this.name = new TextAssets_1.default(itemJson.getAsNumber("ItemName", "Hash"), this.client);
        this.description = new TextAssets_1.default(itemJson.getAsNumber("ItemBGDesc", "Hash"), this.client);
        this.type = new RelicType_1.default(json.getAsString("Type"), this.client);
        this.stars = Number(json.getAsString("Rarity").slice(-1));
        this.maxLevel = json.getAsNumber("MaxLevel");
        this.expType = new RelicExpType_1.default(json.getAsNumber("ExpType"), this.client);
        this.mainStatGroup = new RelicMainStatGroup_1.default(json.getAsNumber("MainAffixGroup"), this.client);
        this.subStatGroup = new RelicSubStatGroup_1.default(json.getAsNumber("SubAffixGroup"), this.client);
        this.expProvide = json.getAsNumber("ExpProvide");
        this.coinCost = json.getAsNumber("CoinCost");
        this.icon = new ImageAssets_1.default(itemJson.getAsString("ItemIconPath"), this.client);
        this.figureIcon = new ImageAssets_1.default(itemJson.getAsString("ItemFigureIconPath"), this.client);
        this.set = new RelicSet_1.default(json.getAsNumber("SetID"), this.client);
    }
}
exports.default = RelicData;
