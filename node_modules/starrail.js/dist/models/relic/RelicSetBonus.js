"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const config_file_js_1 = require("config_file.js");
const AssetsNotFoundError_1 = __importDefault(require("../../errors/AssetsNotFoundError"));
const TextAssets_1 = __importDefault(require("../assets/TextAssets"));
const hash_utils_1 = require("../../utils/hash_utils");
const StatProperty_1 = require("../StatProperty");
/**
 * @en RelicSetBonus
 */
class RelicSetBonus {
    /**
     * @param setId
     * @param needCount
     * @param client
     */
    constructor(setId, needCount, client) {
        var _a;
        this.setId = setId;
        this.needCount = needCount;
        this.client = client;
        const _data = (_a = client.cachedAssetsManager.getStarRailCacheData("RelicSetSkillConfig")[this.setId]) === null || _a === void 0 ? void 0 : _a[needCount];
        if (!_data)
            throw new AssetsNotFoundError_1.default("RelicSetBonus", `${this.setId}-${this.needCount}`);
        this._data = _data;
        const json = new config_file_js_1.JsonReader(this._data);
        this.description = new TextAssets_1.default((0, hash_utils_1.getStableHash)(json.getAsString("SkillDesc")), this.client);
        this.stats = json.get("PropertyList").mapArray((_, stat) => new StatProperty_1.StatPropertyValue(stat.getAsString(this.client.cachedAssetsManager.getObjectKeysManager().relicSetBonusStatPropertyTypeKey), stat.getAsNumber(this.client.cachedAssetsManager.getObjectKeysManager().relicSetBonusStatPropertyValueKey, "Value"), this.client));
    }
}
exports.default = RelicSetBonus;
